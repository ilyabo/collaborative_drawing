import Config

# Note we also include the path to a cache manifest
# containing the digested version of static files. This
# manifest is generated by the `mix assets.deploy` task,
# which you should run after static files are built and
# before starting your production server.
config :mapcanv, MapCanvWeb.Endpoint,
  cache_static_manifest: "priv/static/cache_manifest.json"

# Configures Swoosh API Client
config :swoosh, api_client: Swoosh.ApiClient.Finch, finch_name: MapCanv.Finch

# Disable Swoosh Local Memory Storage
config :swoosh, local: false

# Do not print debug messages in production
config :logger, level: :info

# Runtime production configuration, including reading
# of environment variables, is done on config/runtime.exs.

# What we did here is build the library in its own Docker builder context,
# so it runs in parallel with the rest of our Docker steps and can be cacheâ€™d easily.
# Then we told Rustler to skip compiling and to load it directly from our where we put it.
# See https://fly.io/phoenix-files/elixir-and-rust-is-a-good-mix/
config :mapcanv, YsCrdt,
  crate: :yscrdt,
  skip_compilation?: true,
  load_from: {:mapcanv, "priv/native/libyscrdt"}
